{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Encryption/DecoderPin/Carousel.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Encryption/DecoderPin/Carousel.vue","mtime":1602086742464},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js","mtime":1602086795925},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Draggable from 'gsap/Draggable';\nexport default {\n  props: [\"items\"],\n  mounted: function mounted() {\n    var boxHeight = 30;\n    var _this$$refs = this.$refs,\n        container = _this$$refs.container,\n        proxy = _this$$refs.proxy;\n    var lastY = 0;\n    var component = this;\n\n    var updateProgress = function updateProgress() {\n      if (this.y > lastY) {\n        component.items.unshift(component.items.pop());\n      } else {\n        component.items.push(component.items.shift());\n      }\n\n      lastY = this.y;\n      component.$emit('rotated');\n    };\n\n    var snapY = function snapY(y) {\n      return Math.round(y / boxHeight) * boxHeight;\n    };\n\n    Draggable.create(proxy, {\n      type: 'y',\n      trigger: container,\n      throwProps: true,\n      onDrag: updateProgress,\n      lockAxis: true,\n      liveSnap: true,\n      edgeResistance: 0.65,\n      snap: {\n        y: snapY\n      },\n      cursor: 'grab'\n    });\n  }\n};",{"version":3,"sources":["Carousel.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,OAAA,SAAA,MAAA,gBAAA;AAEA,eAAA;AACA,SAAA,CAAA,OAAA,CADA;AAGA,SAHA,qBAGA;AACA,QAAA,YAAA,EAAA;AADA,sBAEA,KAAA,KAFA;AAAA,QAEA,SAFA,eAEA,SAFA;AAAA,QAEA,KAFA,eAEA,KAFA;AAIA,QAAA,QAAA,CAAA;AACA,QAAA,YAAA,IAAA;;AACA,QAAA,iBAAA,SAAA,cAAA,GAAA;AACA,UAAA,KAAA,CAAA,GAAA,KAAA,EAAA;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,UAAA,KAAA,CAAA,GAAA,EAAA;AACA,OAFA,MAEA;AACA,kBAAA,KAAA,CAAA,IAAA,CAAA,UAAA,KAAA,CAAA,KAAA,EAAA;AACA;;AACA,cAAA,KAAA,CAAA;AACA,gBAAA,KAAA,CAAA,SAAA;AACA,KARA;;AAUA,QAAA,QAAA,SAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,KAAA,KAAA,CAAA,IAAA,SAAA,IAAA,SAAA;AACA,KAFA;;AAIA,cAAA,MAAA,CAAA,KAAA,EAAA;AACA,YAAA,GADA;AAEA,eAAA,SAFA;AAGA,kBAAA,IAHA;AAIA,cAAA,cAJA;AAKA,gBAAA,IALA;AAMA,gBAAA,IANA;AAOA,sBAAA,IAPA;AAQA,YAAA;AACA,WAAA;AADA,OARA;AAWA,cAAA;AAXA,KAAA;AAaA;AApCA,CAAA","sourcesContent":["<template>\n    <div class=\"carousel\">\n        <div class=\"container\" ref=\"container\">\n            <div class=\"boxes\">\n                <div v-for=\"item in items\" class=\"box\">\n                {{ item }}\n                </div>\n            </div>\n        </div>\n        <div ref=\"proxy\"></div>\n    </div>\n</template>\n\n<script>\nimport Draggable from 'gsap/Draggable';\n\nexport default {\n    props: [\"items\"],\n\n    mounted() {\n        const boxHeight = 30;\n        const { container, proxy } = this.$refs;\n\n        let lastY = 0;\n        let component = this;\n        let updateProgress = function () {\n            if (this.y > lastY) {\n                component.items.unshift(component.items.pop())\n            } else {\n                component.items.push(component.items.shift())\n            }\n            lastY = this.y\n            component.$emit('rotated')\n        };\n        \n        let snapY = function (y) {\n            return Math.round(y / boxHeight) * boxHeight;\n        };\n\n        Draggable.create(proxy, {\n            type: 'y',\n            trigger: container,\n            throwProps: true,\n            onDrag: updateProgress,\n            lockAxis:true,\n            liveSnap:true,\n            edgeResistance:0.65,\n            snap: { \n                y: snapY \n            },\n            cursor: 'grab'\n        });\n    },\n};\n</script>\n\n<style scoped>\n.carousel {\n    position: relative;\n    background: none;\n}\n\n.container {\n    width: 30px;\n    height: 240px;\n    overflow: hidden;\n}\n\n.boxes {\n    position: relative;\n}\n\n.box {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n    line-height: 20px;\n    font-family: monospace;\n    text-align: center;\n}\n</style>"],"sourceRoot":"docs/.vuepress/components/Encryption/DecoderPin"}]}