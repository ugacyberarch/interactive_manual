{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Password/Phone.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Password/Phone.vue","mtime":1602086742468},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js","mtime":1602086795925},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["import \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as _ from 'lodash';\nimport anime from 'animejs';\n\nrequire('animate.css');\n\nexport default {\n  data: function data() {\n    return {\n      i: 0,\n      size: 4,\n      pin: [],\n      guess: [],\n      locked: false,\n      timer: '0ms'\n    };\n  },\n  computed: {\n    noPin: function noPin() {\n      return this.pin.length < this.size;\n    },\n    disabled: function disabled() {\n      return this.guess.length == this.size;\n    },\n    pinClass: function pinClass() {\n      var valid = this.validate();\n      return {\n        'pin': true,\n        'error animated infinite headShake': valid == undefined ? false : !valid,\n        'success': valid\n      };\n    }\n  },\n  methods: {\n    reset: function reset() {\n      Object.assign(this.$data, this.$options.data());\n    },\n    clear: function clear() {\n      this.i = 0;\n      this.guess = [];\n    },\n    pressed: function pressed(n) {\n      if (this.pin.length < this.size) {\n        this.pin.push(n);\n      }\n\n      this.guess.push(n);\n    },\n    validate: function validate() {\n      var valid = undefined;\n\n      if (this.guess.length == this.size) {\n        valid = _.isEqual(this.pin, this.guess);\n        setTimeout(this.clear, 700);\n      }\n\n      return valid;\n    },\n    crack: function crack() {\n      var _this = this;\n\n      // Silly animations\n      var t1 = performance.now();\n\n      for (var i = 0; i < 10000; i++) {\n        if (i == parseInt(this.pin.join(''), 10)) {\n          break;\n        }\n      }\n\n      var t2 = performance.now();\n      anime({\n        targets: this,\n        timer: t2 - t1 + 'ms',\n        round: 1,\n        easing: 'linear',\n        update: function update() {\n          document.querySelector('.timer input').value = _this.timer;\n        }\n      });\n      var guess = {\n        pin: 0\n      };\n      anime({\n        targets: guess,\n        pin: parseInt(this.pin.join('')),\n        round: 1,\n        update: function update() {\n          var inputs = document.querySelectorAll(\".pin input\");\n\n          var pin = _.map(_.chunk(_.padStart(guess.pin, 4, '0'), 1), _.toInteger);\n\n          _.map(_.zip(inputs, pin), function (t) {\n            t[0].value = t[1];\n          });\n        }\n      }).finished.then(function () {\n        _this.guess = _this.pin;\n      });\n    }\n  }\n};",{"version":3,"sources":["Phone.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"phone\">\n\n    <div id=\"google-pixel-2-xl\" class=\"container grid-xl text-center\">\n      <div class=\"columns\">\n        <div class=\"column col-12\">\n          <div class=\"device device-google-pixel-2-xl\">\n            <div class=\"device-frame\">\n\n              <div v-if=\"noPin\" class=\"prompt\">\n                Choose your PIN\n              </div>\n\n              <div v-bind:class=\"pinClass\">\n                <input v-for=\"i in 4\" :value=\"guess[i-1]\" disabled />\n              </div>\n\n              <div class=\"numberpad\">\n                <ul>\n                  <li v-for=\"x in 9\">\n                    <button v-on:click=\"pressed(x)\" :disabled=\"disabled\">\n                      {{ x }}\n                    </button>\n                  </li>\n                  <li></li>\n                  <li>\n                    <button v-on:click=\"pressed(0)\">0</button>\n                  </li>\n                  <li></li>\n                </ul>\n              </div>\n\n            </div>\n            <div class=\"device-stripe\"></div>\n            <div class=\"device-header\"></div>\n            <div class=\"device-sensors\"></div>\n            <div class=\"device-btns\"></div>\n            <div class=\"device-power\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"panel\">\n      <div class=\"timer\">\n        <i class=\"fas fa-stopwatch\"></i>\n        <input class=\"timer\" :value=\"timer\" disabled />\n      </div>\n\n      <div class=\"buttons\">\n        <button v-on:click=\"crack\" class=\"crack\" :disabled=\"noPin\">\n          Crack\n        </button>\n\n        <button v-on:click=\"reset\" class=\"reset\" :disabled=\"noPin\">\n          Reset\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script>\nimport * as _ from 'lodash'\nimport anime from 'animejs'\n\nrequire('animate.css')\n\nexport default {\n  data() {\n    return {\n      i: 0,\n      size: 4,\n      pin: [],\n      guess: [],\n      locked: false,\n      timer: '0ms',\n    }\n  },\n  computed: {\n    noPin() {\n      return this.pin.length < this.size\n    },\n    disabled() {\n      return this.guess.length == this.size\n    },\n    pinClass() {\n      let valid = this.validate()\n      return {\n        'pin': true,\n        'error animated infinite headShake':\n          (valid == undefined) ? false : !valid,\n        'success': valid,\n      }\n    },\n  },\n  methods: {\n    reset() {\n      Object.assign(this.$data, this.$options.data())\n    },\n    clear() {\n      this.i = 0\n      this.guess = []\n    },\n    pressed(n) {\n      if (this.pin.length < this.size) {\n        this.pin.push(n)\n      }\n      this.guess.push(n)\n    },\n    validate() {\n      let valid = undefined\n      if (this.guess.length == this.size) {\n        valid = _.isEqual(this.pin, this.guess)\n        setTimeout(this.clear, 700)\n      }\n      return valid\n    },\n    crack() {\n      // Silly animations\n\n      let t1 = performance.now()\n      for (var i = 0; i < 10000; i++) {\n        if (i == parseInt(this.pin.join(''), 10)) {\n          break\n        }\n      }\n      let t2 = performance.now()\n\n      anime({\n        targets: this,\n        timer: (t2 - t1) + 'ms',\n        round: 1,\n        easing: 'linear',\n        update: () => {\n          document.querySelector('.timer input').value = this.timer\n        },\n      })\n\n      var guess = { pin: 0 };\n      anime({\n        targets: guess,\n        pin: parseInt(this.pin.join('')),\n        round: 1,\n        update: () => {\n          let inputs = document.querySelectorAll(\".pin input\")\n          let pin =_.map(_.chunk(_.padStart(guess.pin, 4, '0'), 1), _.toInteger)\n          _.map(_.zip(inputs, pin), (t) => { t[0].value = t[1] })\n        }\n      })\n      .finished.then(() => { this.guess = this.pin })\n\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n.panel {\n  position: relative;\n  top: 100px;\n  left: 300px;\n  width: 300px;\n}\n\n.panel .timer {\n  position: relative;\n  height: 68px;\n  width: 260px;\n  margin-bottom: 20px;\n}\n\n.panel i.fas {\n  color: #DDD;\n  font-size: 60px;\n  vertical-align: middle;\n  position: absolute;\n  top: 8px;\n  left: 18px;\n}\n\n.panel .timer input {\n  background: none;\n  font-size: 60px;\n  border: none;\n  color: #999;\n  padding-left: 90px;\n}\n\n.panel button {\n  color: #FFF;\n  font-size: 30px;\n  margin-right: 10px;\n}\n\n.panel button:disabled {\n  opacity: 0.2;\n}\n\nbutton.reset {\n  background: #5E82A7;\n  border: 4px solid #B5C3DE;\n}\n\nbutton.crack {\n  background: #c62933;\n  border: 4px solid #d85058;\n}\n\n.phone {\n  width: 500px;\n  min-height: 500px;\n  margin: 30px auto;\n}\n\n.prompt {\n  color: #CCC;\n  font-size: 40px;\n  position: absolute;\n  left: 58px;\n  top: 120px;\n}\n\n.pin {\n  text-align: center;\n  margin-top: 140px;\n}\n\n.pin input {\n  font-size: 60px;\n  display: inline-block;\n  width: 1.2em;\n\n  background: none;\n  color: #CCC;\n  border: 2px solid #424242;\n\n  margin: 4px;\n  text-align: center;\n}\n\n.pin.success input {\n  border: 2px solid #196F3D;\n}\n\n.pin.error input {\n  border: 2px solid #C0392B;\n}\n\n.numberpad  {\n  position: relative;\n  width: 100%;\n  text-align: center;\n  margin-top: 140px;\n  z-index: 3;\n}\n\n.numberpad ul {\n  padding: 0;\n  list-style-type: none;\n}\n\n.numberpad li {\n  padding: 0;\n  margin-top: 16px;\n  display: inline-block;\n}\n\n.numberpad button {\n  margin: 0;\n  padding: 0;\n\n  width: 100px;\n  font-size: 48px;\n  color: #CCC;\n  background: none;\n  border: none;\n}\n\n.numberpad button:focus {\n  outline: 0;\n}\n\n.numberpad button:hover {\n  color: #DDD;\n  background-color: #3d3d3d;\n  opacity: 0.7;\n  border-radius: 8px;\n}\n\n/*! Devices.css v0.1.16 | MIT License | github.com/picturepan2/devices.css */\n.device,\n.device::before,\n.device::after,\n.device *,\n.device *::before,\n.device *::after {\n  box-sizing: border-box;\n  display: block;\n}\n\n.device {\n  position: absolute;\n  transform-origin: left top 0;\n  transform: scale(0.6);\n  z-index: 1;\n}\n\n.device .device-frame {\n  z-index: 1;\n}\n\n.device .device-content {\n  background-color: #fff;\n  background-position: center center;\n  background-size: cover;\n  object-fit: cover;\n  position: relative;\n}\n\n.device-google-pixel-2-xl {\n  height: 832px;\n  width: 404px;\n}\n\n.device-google-pixel-2-xl .device-frame {\n  background: #121212;\n  border-radius: 36px;\n  box-shadow: inset 0 0 0 2px #cfcfcf, inset 0 0 0 7px #9c9c9c;\n  height: 832px;\n  padding: 56px 22px;\n  width: 404px;\n}\n\n.device-google-pixel-2-xl .device-content {\n  border-radius: 27px;\n  height: 720px;\n  width: 360px;\n}\n\n.device-google-pixel-2-xl .device-header {\n  height: 832px;\n  left: 50%;\n  margin-left: -150px;\n  position: absolute;\n  top: 0;\n  width: 300px;\n}\n\n.device-google-pixel-2-xl .device-header::after,\n.device-google-pixel-2-xl .device-header::before {\n  background: #333;\n  border-radius: 3px;\n  content: \"\";\n  height: 6px;\n  left: 50%;\n  margin-left: -73px;\n  margin-top: -3px;\n  position: absolute;\n  width: 146px;\n}\n\n.device-google-pixel-2-xl .device-header::after {\n  top: 24px;\n}\n\n.device-google-pixel-2-xl .device-header::before {\n  bottom: 28px;\n}\n\n.device-google-pixel-2-xl .device-sensors {\n  background: #333;\n  border-radius: 7px;\n  height: 14px;\n  left: 54px;\n  margin-top: -7px;\n  position: absolute;\n  top: 36px;\n  width: 14px;\n}\n\n.device-google-pixel-2-xl .device-btns {\n  background: #cfcfcf;\n  height: 102px;\n  position: absolute;\n  right: -3px;\n  top: 306px;\n  width: 3px;\n}\n\n.device-google-pixel-2-xl .device-power {\n  background: #cfcfcf;\n  height: 58px;\n  position: absolute;\n  right: -3px;\n  top: 194px;\n  width: 3px;\n}\n\n\n</style>\n"],"sourceRoot":"docs/.vuepress/components/Password"}]}