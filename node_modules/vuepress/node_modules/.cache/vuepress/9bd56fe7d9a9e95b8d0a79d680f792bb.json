{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Phishing/GuessingGame.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Phishing/GuessingGame.vue","mtime":1602086742469},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js","mtime":1602086795925},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/sammyvo/cyberarch-manual/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as _ from 'lodash';\n\nvar domains = require('./GuessingGame/domains.js');\n\nexport default {\n  data: function data() {\n    var _this$pickDomain = this.pickDomain(),\n        _this$pickDomain2 = _slicedToArray(_this$pickDomain, 2),\n        domain = _this$pickDomain2[0],\n        phish = _this$pickDomain2[1];\n\n    return {\n      view: 'menu',\n      domain: domain,\n      phish: phish,\n      correct: 0,\n      incorrect: 0\n    };\n  },\n  computed: {\n    currentView: function currentView() {\n      return 'Phishing-GuessingGame-' + _.capitalize(this.view);\n    },\n    score: function score() {\n      return {\n        correct: this.correct,\n        total: this.correct + this.incorrect\n      };\n    }\n  },\n  methods: {\n    goto: function goto(view) {\n      this.view = view;\n    },\n    guessed: function guessed(answer) {\n      // Check answer\n      var phish = answer === 'bad';\n\n      if (phish == this.phish) {\n        this.correct++;\n      } else {\n        this.incorrect++;\n      } // Set new question\n\n\n      var _this$pickDomain3 = this.pickDomain();\n\n      var _this$pickDomain4 = _slicedToArray(_this$pickDomain3, 2);\n\n      this.domain = _this$pickDomain4[0];\n      this.phish = _this$pickDomain4[1];\n    },\n    pickDomain: function pickDomain() {\n      var set = _.sample(['phish', 'valid']);\n\n      return [_.sample(domains[set]), set === 'phish'];\n    }\n  }\n};",{"version":3,"sources":["GuessingGame.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,OAAA,KAAA,CAAA,MAAA,QAAA;;AAEA,IAAA,UAAA,QAAA,2BAAA,CAAA;;AAEA,eAAA;AACA,MADA,kBACA;AAAA,2BACA,KAAA,UAAA,EADA;AAAA;AAAA,QACA,MADA;AAAA,QACA,KADA;;AAGA,WAAA;AACA,YAAA,MADA;AAEA,cAAA,MAFA;AAGA,aAAA,KAHA;AAIA,eAAA,CAJA;AAKA,iBAAA;AALA,KAAA;AAOA,GAXA;AAaA,YAAA;AACA,eADA,yBACA;AACA,aAAA,2BAAA,EAAA,UAAA,CAAA,KAAA,IAAA,CAAA;AACA,KAHA;AAKA,SALA,mBAKA;AACA,aAAA;AACA,iBAAA,KAAA,OADA;AAEA,eAAA,KAAA,OAAA,GAAA,KAAA;AAFA,OAAA;AAIA;AAVA,GAbA;AA0BA,WAAA;AACA,QADA,gBACA,IADA,EACA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,KAHA;AAKA,WALA,mBAKA,MALA,EAKA;AACA;AACA,UAAA,QAAA,WAAA,KAAA;;AACA,UAAA,SAAA,KAAA,KAAA,EAAA;AACA,aAAA,OAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA;AACA,OAPA,CAQA;;;AARA,8BASA,KAAA,UAAA,EATA;;AAAA;;AASA,WAAA,MATA;AASA,WAAA,KATA;AAUA,KAfA;AAiBA,cAjBA,wBAiBA;AACA,UAAA,MAAA,EAAA,MAAA,CAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AACA,aAAA,CAAA,EAAA,MAAA,CAAA,QAAA,GAAA,CAAA,CAAA,EAAA,QAAA,OAAA,CAAA;AACA;AApBA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"guessing-game\">\n    <component\n      v-bind:domain=\"domain\"\n      v-bind:score=\"score\"\n      v-bind:is=\"currentView\"\n      v-on:goto=\"goto\"\n      v-on:guess=\"guessed\"\n      />\n  </div>\n</template>\n\n<script>\nimport * as _ from 'lodash';\n\nconst domains = require('./GuessingGame/domains.js');\n\nexport default {\n  data() {\n    var [domain, phish] = this.pickDomain();\n\n    return {\n      view: 'menu',\n      domain: domain,\n      phish: phish,\n      correct: 0,\n      incorrect: 0,\n    }\n  },\n\n  computed: {\n    currentView() {\n      return 'Phishing-GuessingGame-' + _.capitalize(this.view);\n    },\n\n    score() {\n      return {\n        correct: this.correct,\n        total: this.correct + this.incorrect\n      }\n    },\n  },\n\n  methods: {\n    goto(view) {\n      this.view = view;\n    },\n\n    guessed(answer) {\n      // Check answer\n      let phish = (answer === 'bad');  \n      if (phish == this.phish) {\n        this.correct++;\n      } else {\n        this.incorrect++;\n      }\n      // Set new question\n      [this.domain, this.phish] = this.pickDomain();\n    },\n\n    pickDomain() {\n      let set = _.sample(['phish', 'valid']);\n      return [_.sample(domains[set]), set === 'phish'];\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n.guessing-game {\n  position: relative;\n  height: 300px;\n  padding: 20px;\n  border-radius: 4px;\n  box-shadow: 2px 2px 8px rgba(57, 70, 78, 0.2);\n}\n\n.play {\n  margin: 0 auto;\n  width: 480px;\n  text-align: center;\n}\n\n.logo {\n  font-size: 50px;\n  margin: 80px 0 30px 0;\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n.logo span {\n  padding: 0 8px;\n}\n\n.fishing {\n  position: absolute;\n  top: 0;\n  z-index: -1;\n}\n\n.tail {\n  animation: fishtail 2s infinite;\n  transform-origin: 50% 80% 0;\n}\n\n@keyframes fishtail {\n  from { transform: rotateY(30deg) skewX(7deg); }\n  to { transform: rotateY(-30deg) skewX(7deg); }\n}\n\n.play button {\n  width: 100px;\n  margin: 0 auto;\n  padding: 4px 0;\n\n  color: #fff;\n  font-size: 30px;\n  border: none;\n  background: #EFA32C;\n}\n\n.play button:hover {\n  outline: none;\n  background: #FCAB0D;\n}\n\n</style>\n"],"sourceRoot":"docs/.vuepress/components/Phishing"}]}