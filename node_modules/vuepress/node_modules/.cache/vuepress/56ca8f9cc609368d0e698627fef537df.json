{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Password/HSIMP.vue?vue&type=style&index=0&id=f897ca48&scoped=true&lang=css","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Password/HSIMP.vue","mtime":1602086742467},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/css-loader/index.js","mtime":1602086796078},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1602086796509},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vuepress/node_modules/postcss-loader/lib/index.js","mtime":1602086796406},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.hsimp-wrapper {\n}\n\n.hsimp {\n  padding-top: 30px;\n  background: #376a82;\n  transition: background 1s linear;\n  min-height: 200px;\n}\n.hsimp.bad,\n.hsimp.insecure {\n  background: #c23333;\n}\n.hsimp.ok {\n  background: #db7d3a;\n}\n.hsimp.good {\n  background: #378241;\n}\n\n.hsimp input {\n  font-family: \"Helvetica Neue\", sans-serif;\n  font-weight: 800;\n  line-height: 1.5em;\n  text-align: center;\n  font-size: 32px;\n  border: 1px solid #fff;\n  background: #fff;\n  background: rgba(255,255,255,0.6);\n  border-left: 0;\n  border-right: 0;\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n}\n\n.hsimp input::placeholder {\n  color: #376a82;\n}\n\n.hsimp input:focus {\n  outline: 0;\n}\n\n.hsimp .content {\n  padding: 10px 30px;\n  margin-top: 0;\n}\n\n.hsimp .time {\n  margin-top: 0 !important;\n  text-align: center;\n  font-size: 2em;\n  font-weight: bold;\n  font-variant: small-caps;\n  color: #fff;\n}\n\n.hsimp .time span {\n  font-size: 0.4em;\n  display: block;\n  font-weight: bold;\n  font-variant: none;\n}\n\n.hsimp dl {\n  background: #fff;\n  background: rgba(255,255,255,0.8);\n}\n\n.hsimp dt {\n  color: #fff;\n  font-size: 1.2em;\n  font-weight: bold;\n  background: #000;\n  padding: 4px 14px;\n}\n\n.hsimp dt.warning {\n  color: #db7d3a;\n}\n\n.hsimp dt.achievement {\n  color: #378241;\n}\n\n.hsimp dt.notice {\n  color: #376a82;\n}\n\n.hsimp dt.insecure {\n  color: #c23333;\n}\n\n.hsimp dd {\n  padding: 10px 0;\n}\n\n",{"version":3,"sources":["HSIMP.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"HSIMP.vue","sourceRoot":"docs/.vuepress/components/Password","sourcesContent":["<template>\n  <div class=\"hsimp-wrapper\">\n\n    <div class=\"hsimp\" v-bind:class=\"security\">\n\n      <input type=\"password\" v-model=\"password\" placeholder=\"ENTER PASSWORD\" />\n\n      <Password-Cracker\n        v-bind:password=\"password\"\n        v-bind:speed=\"speed\"\n        v-on:change-speed=\"changeSpeed\"\n        v-on:reset=\"reset\"\n        />\n\n      <div class=\"content\">\n\n        <div class=\"time\" v-if=\"password.length > 0\">\n          <span v-if=\"security == 'insecure'\">\n            Your password would be cracked\n          </span>\n          <span v-else>\n            It will take a computer about\n          </span>\n          {{ time }}\n          <span v-if=\"security != 'insecure'\">\n            to crack your password.\n          </span>\n        </div>\n\n        <dl v-if=\"checks\">\n          <template v-for=\"check in checks\">\n            <dt v-bind:class=\"check.level\">{{ check.name }}</dt>\n            <dd>{{ check.message }}</dd>\n          </template>\n        </dl>\n\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as _ from 'lodash';\nconst hsimp = require('./hsimp')\n\nexport default {\n  data() {\n    return {\n      password: '',\n      speed: 10,\n      ok: 31557600, // 1 year\n      good: 31557600e3, // 1,000 years\n    }\n  },\n\n  computed: {\n    digit() {\n      return /[0-9]/.test(this.password)\n    },\n    lower() {\n      return /[a-z]/.test(this.password)\n    },\n    upper() {\n      return /[A-Z]/.test(this.password)\n    },\n    symbol() {\n      return /[$-/:-?{-~!\"^_`\\[\\]]/.test(this.password)\n    },\n    alpha() {\n      var sets = [];\n      if (this.symbol) { sets = sets.concat(_.range(0x20, 0x30)) }\n      if (this.upper) { sets = sets.concat(_.range(0x41, 0x5b)) }\n      if (this.digit) { sets = sets.concat(_.range(0x30, 0x3a)) }\n      if (this.symbol) { sets = sets.concat(_.range(0x3a, 0x41)) }\n      if (this.lower) { sets = sets.concat(_.range(0x61, 0x7b)) }\n      if (this.symbol) { sets = sets.concat(_.range(0x7b, 0x7f)) }\n      return new Set(_.flatten(sets))\n    },\n    possibleCombinations() {\n      return Math.pow(this.alpha.size, this.password.length)\n    },\n    calculationsPerSecond() {\n      return Math.pow(10, this.speed) * 4\n    },\n    timeInSeconds() {\n      return this.possibleCombinations / this.calculationsPerSecond;\n    },\n    time() {\n      let checker = hsimp.checker(this.password)\n      if (checker.isInsecure()) {\n        return 'Instantly'\n      }\n\n      let period = hsimp.period(this.timeInSeconds)\n      let periodLength = period.getLength()\n\n      let formattedPeriodLength = hsimp.namedNumber(periodLength).getName();\n      let periodName = formattedPeriodLength === \"1\"\n          ? period.getSingular()\n          : period.getPlural();\n\n      let periodString = formattedPeriodLength + \" \" + periodName;\n\n\n      return periodString\n    },\n    security() {\n      let level, checker\n\n      if (this.password.length > 0) {\n        level = \"bad\"\n        checker = hsimp.checker(this.password)\n\n        if (checker.isInsecure()) {\n          level = \"insecure\"\n        }\n        else if (this.timeInSeconds >= this.good) {\n          level = checker.hasWarnings() ? \"ok\" : \"good\"\n        }\n        else if (this.timeInSeconds >= this.ok) {\n          level = \"ok\"\n        }\n      }\n\n      return level\n    },\n    checks() {\n      return hsimp.checker(this.password).getChecks()\n    },\n  },\n  methods: {\n    changeSpeed(speed) {\n      this.speed = parseInt(speed);\n    },\n    reset() {\n      this.password = '';\n      this.speed = 10;\n    },\n  }\n\n}\n</script>\n\n<style scoped>\n.hsimp-wrapper {\n}\n\n.hsimp {\n  padding-top: 30px;\n  background: #376a82;\n  transition: background 1s linear;\n  min-height: 200px;\n}\n.hsimp.bad,\n.hsimp.insecure {\n  background: #c23333;\n}\n.hsimp.ok {\n  background: #db7d3a;\n}\n.hsimp.good {\n  background: #378241;\n}\n\n.hsimp input {\n  font-family: \"Helvetica Neue\", sans-serif;\n  font-weight: 800;\n  line-height: 1.5em;\n  text-align: center;\n  font-size: 32px;\n  border: 1px solid #fff;\n  background: #fff;\n  background: rgba(255,255,255,0.6);\n  border-left: 0;\n  border-right: 0;\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n}\n\n.hsimp input::placeholder {\n  color: #376a82;\n}\n\n.hsimp input:focus {\n  outline: 0;\n}\n\n.hsimp .content {\n  padding: 10px 30px;\n  margin-top: 0;\n}\n\n.hsimp .time {\n  margin-top: 0 !important;\n  text-align: center;\n  font-size: 2em;\n  font-weight: bold;\n  font-variant: small-caps;\n  color: #fff;\n}\n\n.hsimp .time span {\n  font-size: 0.4em;\n  display: block;\n  font-weight: bold;\n  font-variant: none;\n}\n\n.hsimp dl {\n  background: #fff;\n  background: rgba(255,255,255,0.8);\n}\n\n.hsimp dt {\n  color: #fff;\n  font-size: 1.2em;\n  font-weight: bold;\n  background: #000;\n  padding: 4px 14px;\n}\n\n.hsimp dt.warning {\n  color: #db7d3a;\n}\n\n.hsimp dt.achievement {\n  color: #378241;\n}\n\n.hsimp dt.notice {\n  color: #376a82;\n}\n\n.hsimp dt.insecure {\n  color: #c23333;\n}\n\n.hsimp dd {\n  padding: 10px 0;\n}\n\n</style>\n"]}]}