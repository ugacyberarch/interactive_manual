{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Phishing/Tree.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Phishing/Tree.vue","mtime":1602086742472},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js","mtime":1602086795925},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport _slicedToArray from \"/Users/sammyvo/cyberarch-manual/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as d3 from 'd3';\nimport * as _ from 'lodash';\nimport * as psl from 'psl';\nexport default {\n  data: function data() {\n    return {\n      error: \"\",\n      width: 700,\n      height: 240,\n      domain: null,\n      domains: ['www.facebook.com', 'paypal.com', 'paypal.com.9kcj.pw']\n    };\n  },\n  mounted: function mounted() {\n    // Bind 'Pan & Zoom' transform\n    var svg = d3.select(this.$el).select('svg');\n    var g = svg.select(\"g\");\n\n    var zoomed = function zoomed() {\n      return g.attr(\"transform\", d3.event.transform);\n    };\n\n    svg.select(\"rect\").call(d3.zoom().scaleExtent([1 / 2, 4]).on(\"zoom\", zoomed));\n  },\n  computed: {\n    treeData: function treeData() {\n      // Build domain suffix tree from.\n      var parse = function parse(domains) {\n        return _.map(domains, psl.parse);\n      };\n\n      var nodes = function nodes(a) {\n        return function (fn) {\n          return _.map(_.entries(a), function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                k = _ref2[0],\n                v = _ref2[1];\n\n            return {\n              name: k,\n              children: _.filter(fn(v), 'name')\n            };\n          });\n        };\n      };\n\n      var subs = function subs(domains) {\n        return _.map(domains, function (d) {\n          return {\n            name: d.subdomain\n          };\n        });\n      };\n\n      var slds = function slds(domains) {\n        return nodes(_.groupBy(domains, 'sld'))(subs);\n      };\n\n      var tlds = function tlds(domains) {\n        return nodes(_.groupBy(domains, 'tld'))(slds);\n      };\n\n      return nodes({\n        '': parse(this.domains)\n      })(tlds)[0];\n    },\n    treeRoot: function treeRoot() {\n      var root = d3.hierarchy(this.treeData);\n      var treeLayout = d3.tree();\n      treeLayout.size([this.width, this.height]);\n      treeLayout(root);\n      return root;\n    }\n  },\n  methods: {\n    addDomain: function addDomain(event) {\n      if (this.domain) {\n        if (psl.isValid(this.domain)) {\n          this.domains.push(this.domain);\n          this.domain = \"\";\n          this.error = \"\";\n        } else {\n          this.error = \"Oops, that doesn't look like a valid domain name!\";\n        }\n      }\n    },\n    removeDomain: function removeDomain(domain) {\n      var i = this.domains.indexOf(domain);\n\n      if (i > -1) {\n        this.domains.splice(i, 1);\n      }\n    }\n  }\n};",{"version":3,"sources":["Tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"domains\">\n\n    <div class=\"danger custom-block error\" v-if=\"error.length > 0\">\n      {{ error }}\n    </div>\n\n    <div class=\"form\">\n      <form v-on:submit.prevent=\"addDomain\">\n        <input v-model=\"domain\" placeholder=\"Enter a domain name\" />\n        <button>Add</button>\n      </form>\n    </div>\n\n    <div class=\"list\">\n      <ul>\n        <li v-for=\"domain in domains\">\n          {{ domain }}\n          <a v-on:click=\"removeDomain(domain)\">\n            <i class=\"fas fa-times\"></i>\n          </a>\n        </li>\n      </ul>\n      <div style=\"clear:both;\"></div>\n    </div>\n\n    <svg class=\"graph\" id=\"tree\" :width=\"width\" :height=\"height + 20\">\n      <g transform=\"translate(0,10)\">\n\n        <g class=\"nodes\">\n          <g v-for=\"node in treeRoot.descendants()\" class=\"node\">\n            <circle :cx=\"node.x\" :cy=\"node.y\" r=\"2\" fill=\"#696969\" />\n            <text :dx=\"node.x + 10\" :dy=\"node.y + 8\">\n              {{ node.data.name }}\n            </text>\n          </g>\n        </g>\n\n        <g class=\"links\">\n          <line v-for=\"link in treeRoot.links()\"\n              class=\"link\"\n              stroke=\"#6f5f5f\"\n              :x1=\"link.source.x\"\n              :y1=\"link.source.y\"\n              :x2=\"link.target.x\"\n              :y2=\"link.target.y\"\n          />\n        </g>\n\n      </g>\n\n      <rect\n        :width=\"width\"\n        :height=\"height + 20\"\n        style=\"fill: none; pointer-events: all;\"\n        />\n    </svg>\n\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport * as _ from 'lodash';\nimport * as psl from 'psl';\n\nexport default {\n  data() {\n    return {\n      error: \"\",\n      width: 700,\n      height: 240,\n      domain: null,\n      domains: [\n        'www.facebook.com',\n        'paypal.com',\n        'paypal.com.9kcj.pw',\n      ],\n    }\n  },\n\n  mounted() {\n    // Bind 'Pan & Zoom' transform\n    let svg = d3.select(this.$el).select('svg');\n    let g = svg.select(\"g\");\n    let zoomed = () => g.attr(\"transform\", d3.event.transform);\n    svg.select(\"rect\")\n      .call(d3.zoom()\n        .scaleExtent([1 / 2, 4])\n        .on(\"zoom\", zoomed));\n  },\n\n  computed: {\n    treeData() {\n      // Build domain suffix tree from.\n      let parse = (domains) => _.map(domains, psl.parse);\n\n      let nodes = (a) => ( (fn) =>\n        _.map(_.entries(a), ([k,v]) =>\n          ({ name: k, children: _.filter(fn(v), 'name') })) );\n\n      let subs = (domains) => _.map(domains, (d) => ({name: d.subdomain}));\n      let slds = (domains) => nodes(_.groupBy(domains, 'sld'))(subs);\n      let tlds = (domains) => nodes(_.groupBy(domains, 'tld'))(slds);\n\n      return nodes({'':parse(this.domains)})(tlds)[0];\n    },\n    treeRoot() {\n      let root =  d3.hierarchy(this.treeData);\n\n      let treeLayout = d3.tree();\n      treeLayout.size([this.width, this.height]);\n      treeLayout(root);\n\n      return root;\n    },\n  },\n\n  methods: {\n    addDomain(event) {\n      if (this.domain) {\n        if (psl.isValid(this.domain)) {\n          this.domains.push(this.domain);\n          this.domain = \"\";\n          this.error = \"\";\n        } else {\n          this.error = \"Oops, that doesn't look like a valid domain name!\";\n        }\n      }\n    },\n    removeDomain(domain) {\n      let i = this.domains.indexOf(domain);\n      if (i > -1) {\n        this.domains.splice(i, 1);\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.domains {\n  margin: 40px 0;\n}\n\n.domains .form {\n  width: 100%;\n  text-align: center;\n}\n\n.domains input {\n  font-size: 24px;\n  margin: 0 10px;\n  padding: 0 10px;\n  width: 80%;\n}\n\n.domains button {\n  font-size: 24px;\n  color: #F2F3C7;\n  border: none;\n  padding: 3px 10px;\n  background: #186E6F;\n}\n\n.domains button:hover {\n  color: #E9C57F;\n}\n\n.domains .error {\n  color: red;\n  padding: 4px 8px;\n}\n\n.list ul {\n  list-style-type: none;\n  margin: 20px 0;\n}\n\n.list li {\n  float: left;\n  padding: 4px 8px;\n  color: #FFF;\n  font-weight: bold;\n  border: 1px solid;\n  background: #186E6F;\n}\n\n.list li i {\n  color: #F2F3C7;\n  vertical-align: middle;\n  padding: 0 8px;\n}\n\n.list li i:hover {\n  color: #E9C57F;\n}\n\n.list .graph {\n  width: 700px;\n  margin: 0 auto;\n}\n\n.domains svg {\n  border: 2px dotted #ccc;\n  margin: 10px;\n  padding: 20px;\n}\n</style>\n"],"sourceRoot":"docs/.vuepress/components/Phishing"}]}