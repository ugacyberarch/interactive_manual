{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Encryption/DecoderPin.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Encryption/DecoderPin.vue","mtime":1602086742463},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js","mtime":1602086795925},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as _ from 'lodash';\nimport tippy from 'tippy.js';\nexport default {\n  data: function data() {\n    var alphabet = _.toArray('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\n    var numbers = _.map(_.range(0, 26), _.toString);\n\n    return {\n      ciphertext: '11 14 2 4 1 14 3 24 13 1 18 23 20 8 24 4 1 24 5 10 21 3 18 23 14',\n      plaintext: '',\n      keys: alphabet,\n      values: numbers\n    };\n  },\n  mounted: function mounted() {\n    this.tips = tippy('[data-tippy]');\n\n    _.invokeMap(this.tips.tooltips, 'show');\n  },\n  destroyed: function destroyed() {\n    _.invokeMap(this.tips.tooltips, 'destroy');\n  },\n  computed: {\n    map: function map() {\n      return _.zipObject(this.keys, this.values);\n    }\n  },\n  methods: {\n    decode: function decode() {\n      var map = _.invert(this.map);\n\n      var values = this.ciphertext.replace(/\\s+/g, ' ').split(/\\s/);\n      this.plaintext = _.join(_.at(map, values), '');\n    },\n    encode: function encode() {\n      var map = this.map;\n      this.ciphertext = _.join(_.at(map, _.toArray(this.plaintext)), ' ');\n    },\n    rotated: function rotated() {\n      this.tips.tooltips[0].hide();\n    }\n  }\n};",{"version":3,"sources":["DecoderPin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,KAAA,CAAA,MAAA,QAAA;AACA,OAAA,KAAA,MAAA,UAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,QAAA,WAAA,EAAA,OAAA,CAAA,4BAAA,CAAA;;AACA,QAAA,UAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,QAAA,CAAA;;AACA,WAAA;AACA,kBAAA,kEADA;AAEA,iBAAA,EAFA;AAGA,YAAA,QAHA;AAIA,cAAA;AAJA,KAAA;AAMA,GAVA;AAWA,SAXA,qBAWA;AACA,SAAA,IAAA,GAAA,MAAA,cAAA,CAAA;;AACA,MAAA,SAAA,CAAA,KAAA,IAAA,CAAA,QAAA,EAAA,MAAA;AACA,GAdA;AAeA,WAfA,uBAeA;AACA,MAAA,SAAA,CAAA,KAAA,IAAA,CAAA,QAAA,EAAA,SAAA;AACA,GAjBA;AAkBA,YAAA;AACA,OADA,iBACA;AACA,aAAA,EAAA,SAAA,CAAA,KAAA,IAAA,EAAA,KAAA,MAAA,CAAA;AACA;AAHA,GAlBA;AAuBA,WAAA;AACA,UADA,oBACA;AACA,UAAA,MAAA,EAAA,MAAA,CAAA,KAAA,GAAA,CAAA;;AACA,UAAA,SAAA,KAAA,UAAA,CAAA,OAAA,CAAA,MAAA,EAAA,GAAA,EAAA,KAAA,CAAA,IAAA,CAAA;AACA,WAAA,SAAA,GAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA;AACA,KALA;AAMA,UANA,oBAMA;AACA,UAAA,MAAA,KAAA,GAAA;AACA,WAAA,UAAA,GACA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,CAAA,KAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CADA;AAEA,KAVA;AAWA,WAXA,qBAWA;AACA,WAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,IAAA;AACA;AAbA;AAvBA,CAAA","sourcesContent":["<template>\n    <div class=\"decoder\">\n        <div\n            class=\"keys\"\n            title=\"Grab and pull to change.\"\n            data-tippy\n            data-tippy-arrow=\"true\"\n            data-tippy-placement=\"top\"\n            data-tippy-trigger=\"manual\"\n            data-tippy-flip=\"false\"\n        >\n            <Encryption-DecoderPin-Carousel\n                :items=\"keys\"\n                v-on:rotated=\"rotated\"\n            />\n        </div>\n        <div class=\"values\">\n            <Encryption-DecoderPin-Carousel\n                :items=\"values\"\n                v-on:rotated=\"rotated\"\n            />\n        </div>\n        <div class=\"inputs\">\n            <div class=\"ciphertext\">\n                <button v-on:click=\"decode\">Decode Message</button>\n                <textarea v-model=\"ciphertext\">\n                </textarea>\n            </div>\n            <div class=\"plaintext\">\n                <button v-on:click=\"encode\">Encode Message</button>\n                <textarea v-model=\"plaintext\">\n                </textarea>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as _ from 'lodash';\nimport tippy from 'tippy.js';\n\nexport default {\n    data() {\n        let alphabet = _.toArray('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n        let numbers = _.map(_.range(0, 26), _.toString);\n        return {\n            ciphertext: '11 14 2 4 1 14 3 24 13 1 18 23 20 8 24 4 1 24 5 10 21 3 18 23 14',\n            plaintext: '',\n            keys: alphabet,\n            values: numbers,\n        }\n    },\n    mounted() {\n        this.tips = tippy('[data-tippy]');\n        _.invokeMap(this.tips.tooltips, 'show');\n    },\n    destroyed() {\n        _.invokeMap(this.tips.tooltips, 'destroy');\n    },\n    computed: {\n        map() {\n            return _.zipObject(this.keys, this.values);\n        }\n    },\n    methods: {\n        decode() {\n            let map = _.invert(this.map);\n            let values = this.ciphertext.replace(/\\s+/g, ' ').split(/\\s/);\n            this.plaintext = _.join(_.at(map, values), '');\n        },\n        encode() {\n            let map = this.map;\n            this.ciphertext =\n                _.join(_.at(map, _.toArray(this.plaintext)), ' ');\n        },\n        rotated() {\n            this.tips.tooltips[0].hide()\n        }\n    }\n}\n</script>\n\n<style scoped>\n.decoder {\n    position: relative;\n    padding: 20px 0;\n    height: 240px;\n    margin: 0 auto;\n    margin-top: 30px;\n    text-align: center;\n}\n\n.keys {\n    background-color: #D2AC72;\n    display: inline-block;\n    border: 4px solid #E7C776;\n    border-right: 3px solid #F9D889;\n    text-shadow: 0px 1px 0px rgba(255,255,255,.3),\n                 0px -1px 0px rgba(0,0,0,.7);\n}\n\n.values {\n    background-color: #C9AB75;\n    display: inline-block;\n    border: 2px solid #E7C776;\n    border-left: none;\n    border-radius: 3px;\n    text-shadow: 0px 1px 0px rgba(255,255,255,.3),\n                 0px -1px 0px rgba(0,0,0,.7);\n}\n\n.inputs {\n    position: relative;\n    padding: 0 20px;\n    vertical-align: top;\n    display: inline-block;\n}\n\n.inputs button {\n    position: absolute;\n    margin-top: 4px;\n    right: 24px;\n    background: none;\n    font-size: 16px;\n    border: 1px solid #ccc;\n}\n\n.inputs textarea {\n    padding: 25px;\n    width: 500px;\n    height: 70px;\n    font-size: 20px;\n    font-family: monospace;\n    border: 1px solid #333;\n}\n</style>"],"sourceRoot":"docs/.vuepress/components/Encryption"}]}