{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Firewalls/Tree.vue?vue&type=style&index=0&id=713ffee9&scoped=true&lang=css","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Firewalls/Tree.vue","mtime":1602086742465},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/css-loader/index.js","mtime":1602086796078},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1602086796509},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vuepress/node_modules/postcss-loader/lib/index.js","mtime":1602086796406},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.domains {\n  margin: 40px 0;\n}\n\n.domains .form {\n  width: 100%;\n  text-align: center;\n}\n\n.domains input {\n  font-size: 24px;\n  margin: 0 10px;\n  padding: 0 10px;\n  width: 80%;\n}\n\n.domains button {\n  font-size: 24px;\n  color: #F2F3C7;\n  border: none;\n  padding: 3px 10px;\n  background: #186E6F;\n}\n\n.domains button:hover {\n  color: #E9C57F;\n}\n\n.domains .error {\n  color: red;\n  padding: 4px 8px;\n}\n\n.list ul {\n  list-style-type: none;\n  margin: 20px 0;\n}\n\n.list li {\n  float: left;\n  padding: 4px 8px;\n  color: #FFF;\n  font-weight: bold;\n  border: 1px solid;\n  background: #186E6F;\n}\n\n.list li i {\n  color: #F2F3C7;\n  vertical-align: middle;\n  padding: 0 8px;\n}\n\n.list li i:hover {\n  color: #E9C57F;\n}\n\n.list .graph {\n  width: 700px;\n  margin: 0 auto;\n}\n\n.domains svg {\n  border: 2px dotted #ccc;\n  margin: 10px;\n  padding: 20px;\n}\n",{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Tree.vue","sourceRoot":"docs/.vuepress/components/Firewalls","sourcesContent":["<template>\n  <div class=\"domains\">\n\n    <div class=\"danger custom-block error\" v-if=\"error.length > 0\">\n      {{ error }}\n    </div>\n\n    <div class=\"form\">\n      <form v-on:submit.prevent=\"addDomain\">\n        <input v-model=\"domain\" placeholder=\"Enter a domain name\" />\n        <button>Add</button>\n      </form>\n    </div>\n\n    <div class=\"list\">\n      <ul>\n        <li v-for=\"domain in domains\">\n          {{ domain }}\n          <a v-on:click=\"removeDomain(domain)\">\n            <i class=\"fas fa-times\"></i>\n          </a>\n        </li>\n      </ul>\n      <div style=\"clear:both;\"></div>\n    </div>\n\n    <svg class=\"graph\" id=\"tree\" :width=\"width\" :height=\"height + 20\">\n      <g transform=\"translate(0,10)\">\n\n        <g class=\"nodes\">\n          <g v-for=\"node in treeRoot.descendants()\" class=\"node\">\n            <circle :cx=\"node.x\" :cy=\"node.y\" r=\"2\" fill=\"#696969\" />\n            <text :dx=\"node.x + 10\" :dy=\"node.y + 8\">\n              {{ node.data.name }}\n            </text>\n          </g>\n        </g>\n\n        <g class=\"links\">\n          <line v-for=\"link in treeRoot.links()\"\n              class=\"link\"\n              stroke=\"#6f5f5f\"\n              :x1=\"link.source.x\"\n              :y1=\"link.source.y\"\n              :x2=\"link.target.x\"\n              :y2=\"link.target.y\"\n          />\n        </g>\n\n      </g>\n\n      <rect\n        :width=\"width\"\n        :height=\"height + 20\"\n        style=\"fill: none; pointer-events: all;\"\n        />\n    </svg>\n\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport * as _ from 'lodash';\nimport * as psl from 'psl';\n\nexport default {\n  data() {\n    return {\n      error: \"\",\n      width: 700,\n      height: 240,\n      domain: null,\n      domains: [\n        'www.facebook.com',\n        'paypal.com',\n        'paypal.com.9kcj.pw',\n      ],\n    }\n  },\n\n  mounted() {\n    // Bind 'Pan & Zoom' transform\n    let svg = d3.select(this.$el).select('svg');\n    let g = svg.select(\"g\");\n    let zoomed = () => g.attr(\"transform\", d3.event.transform);\n    svg.select(\"rect\")\n      .call(d3.zoom()\n        .scaleExtent([1 / 2, 4])\n        .on(\"zoom\", zoomed));\n  },\n\n  computed: {\n    treeData() {\n      // Build domain suffix tree from.\n      let parse = (domains) => _.map(domains, psl.parse);\n\n      let nodes = (a) => ( (fn) =>\n        _.map(_.entries(a), ([k,v]) =>\n          ({ name: k, children: _.filter(fn(v), 'name') })) );\n\n      let subs = (domains) => _.map(domains, (d) => ({name: d.subdomain}));\n      let slds = (domains) => nodes(_.groupBy(domains, 'sld'))(subs);\n      let tlds = (domains) => nodes(_.groupBy(domains, 'tld'))(slds);\n\n      return nodes({'':parse(this.domains)})(tlds)[0];\n    },\n    treeRoot() {\n      let root =  d3.hierarchy(this.treeData);\n\n      let treeLayout = d3.tree();\n      treeLayout.size([this.width, this.height]);\n      treeLayout(root);\n\n      return root;\n    },\n  },\n\n  methods: {\n    addDomain(event) {\n      if (this.domain) {\n        if (psl.isValid(this.domain)) {\n          this.domains.push(this.domain);\n          this.domain = \"\";\n          this.error = \"\";\n        } else {\n          this.error = \"Oops, that doesn't look like valid domain name!\";\n        }\n      }\n    },\n    removeDomain(domain) {\n      let i = this.domains.indexOf(domain);\n      if (i > -1) {\n        this.domains.splice(i, 1);\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.domains {\n  margin: 40px 0;\n}\n\n.domains .form {\n  width: 100%;\n  text-align: center;\n}\n\n.domains input {\n  font-size: 24px;\n  margin: 0 10px;\n  padding: 0 10px;\n  width: 80%;\n}\n\n.domains button {\n  font-size: 24px;\n  color: #F2F3C7;\n  border: none;\n  padding: 3px 10px;\n  background: #186E6F;\n}\n\n.domains button:hover {\n  color: #E9C57F;\n}\n\n.domains .error {\n  color: red;\n  padding: 4px 8px;\n}\n\n.list ul {\n  list-style-type: none;\n  margin: 20px 0;\n}\n\n.list li {\n  float: left;\n  padding: 4px 8px;\n  color: #FFF;\n  font-weight: bold;\n  border: 1px solid;\n  background: #186E6F;\n}\n\n.list li i {\n  color: #F2F3C7;\n  vertical-align: middle;\n  padding: 0 8px;\n}\n\n.list li i:hover {\n  color: #E9C57F;\n}\n\n.list .graph {\n  width: 700px;\n  margin: 0 auto;\n}\n\n.domains svg {\n  border: 2px dotted #ccc;\n  margin: 10px;\n  padding: 20px;\n}\n</style>\n"]}]}