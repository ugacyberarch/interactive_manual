{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Encryption/DecoderPin/Carousel.vue?vue&type=style&index=0&id=0cc5da81&scoped=true&lang=css","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Encryption/DecoderPin/Carousel.vue","mtime":1602086742464},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/css-loader/index.js","mtime":1602086796078},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1602086796509},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vuepress/node_modules/postcss-loader/lib/index.js","mtime":1602086796406},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.carousel {\n    position: relative;\n    background: none;\n}\n\n.container {\n    width: 30px;\n    height: 240px;\n    overflow: hidden;\n}\n\n.boxes {\n    position: relative;\n}\n\n.box {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n    line-height: 20px;\n    font-family: monospace;\n    text-align: center;\n}\n",{"version":3,"sources":["Carousel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Carousel.vue","sourceRoot":"docs/.vuepress/components/Encryption/DecoderPin","sourcesContent":["<template>\n    <div class=\"carousel\">\n        <div class=\"container\" ref=\"container\">\n            <div class=\"boxes\">\n                <div v-for=\"item in items\" class=\"box\">\n                {{ item }}\n                </div>\n            </div>\n        </div>\n        <div ref=\"proxy\"></div>\n    </div>\n</template>\n\n<script>\nimport Draggable from 'gsap/Draggable';\n\nexport default {\n    props: [\"items\"],\n\n    mounted() {\n        const boxHeight = 30;\n        const { container, proxy } = this.$refs;\n\n        let lastY = 0;\n        let component = this;\n        let updateProgress = function () {\n            if (this.y > lastY) {\n                component.items.unshift(component.items.pop())\n            } else {\n                component.items.push(component.items.shift())\n            }\n            lastY = this.y\n            component.$emit('rotated')\n        };\n        \n        let snapY = function (y) {\n            return Math.round(y / boxHeight) * boxHeight;\n        };\n\n        Draggable.create(proxy, {\n            type: 'y',\n            trigger: container,\n            throwProps: true,\n            onDrag: updateProgress,\n            lockAxis:true,\n            liveSnap:true,\n            edgeResistance:0.65,\n            snap: { \n                y: snapY \n            },\n            cursor: 'grab'\n        });\n    },\n};\n</script>\n\n<style scoped>\n.carousel {\n    position: relative;\n    background: none;\n}\n\n.container {\n    width: 30px;\n    height: 240px;\n    overflow: hidden;\n}\n\n.boxes {\n    position: relative;\n}\n\n.box {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n    line-height: 20px;\n    font-family: monospace;\n    text-align: center;\n}\n</style>"]}]}