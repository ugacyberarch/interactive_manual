{"remainingRequest":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Password/FamilyFeud.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sammyvo/cyberarch-manual/docs/.vuepress/components/Password/FamilyFeud.vue","mtime":1602086742467},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/cache-loader/dist/cjs.js","mtime":1602086795963},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/babel-loader/lib/index.js","mtime":1602086795925},{"path":"/Users/sammyvo/cyberarch-manual/node_modules/vue-loader/lib/index.js","mtime":1602086796509}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as sha1 from 'js-sha1';\nexport default {\n  props: ['size'],\n  data: function data() {\n    var guesses = [];\n\n    for (var i = 0; i < this.size; i++) {\n      guesses.push({\n        value: '',\n        score: ''\n      });\n    }\n\n    return {\n      slot: 0,\n      guess: '',\n      guesses: guesses,\n      miss: false\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var hash = sha1(this.guess).toUpperCase();\n      var prefix = hash.slice(0, 5);\n      var suffix = hash.slice(5, 40);\n      fetch('https://api.pwnedpasswords.com/range/' + prefix).then(function (response) {\n        return response.text();\n      }).then(function (data) {\n        var block = {};\n        data.split('\\n').forEach(function (line) {\n          var entry = line.split(':');\n          block[entry[0]] = parseInt(entry[1]);\n        });\n        return block;\n      }).then(function (block) {\n        // Update scoreboard\n        var guess = {\n          value: _this.guess,\n          score: block[suffix] || 0\n        };\n\n        _this.$set(_this.guesses, _this.slot, guess); // Show X buzzer, if not found\n\n\n        if (guess.score < 1) {\n          _this.miss = true;\n          setTimeout(function () {\n            return _this.miss = false;\n          }, 1000);\n        } // Reset input, move to next scoreboard entry\n\n\n        _this.guess = '';\n\n        _this.nextSlot();\n      });\n    },\n    reset: function reset() {\n      this.slot = 0;\n      this.guess = '';\n      this.guesses = [];\n\n      for (var i = 0; i < this.size; i++) {\n        this.guesses.push({\n          value: '',\n          score: ''\n        });\n      }\n    },\n    nextSlot: function nextSlot() {\n      this.slot = (this.slot + 1) % this.size;\n    }\n  },\n  computed: {\n    rows: function rows() {\n      return this.size / 2;\n    },\n    score: function score() {\n      var total = 0;\n\n      for (var i = 0; i < this.guesses.length; i++) {\n        total = total + (parseInt(this.guesses[i].score) || 0);\n      }\n\n      return total.toLocaleString();\n    },\n    leftColumn: function leftColumn() {\n      return this.guesses.slice(0, this.size / 2);\n    },\n    rightColumn: function rightColumn() {\n      return this.guesses.slice(this.size / 2, this.size);\n    }\n  }\n};",{"version":3,"sources":["FamilyFeud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"game\">\n\n    <div class=\"controls\">\n      <div class=\"left\">\n        <form @submit.prevent=\"submit\">\n          <input v-model=\"guess\" type=\"password\" placeholder=\"Password\" />\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n      <div class=\"right\">\n        <button v-on:click=\"reset\">Reset</button>\n        <!-- <button>High Scores</button> -->\n      </div>\n      <div style=\"clear:both;\"></div>\n    </div>\n\n    <div class=\"gameboard\">\n\n      <div class=\"x\" v-if=\"miss\">X</div>\n\n      <div class=\"left column\">\n        <div class=\"item\" v-for=\"guess in leftColumn\">\n          <input :value=\"guess.value\" disabled />\n          <input :value=\"guess.score\" disabled />\n        </div>\n      </div>\n      <div class=\"right column\">\n        <div class=\"item\" v-for=\"guess in rightColumn\">\n          <input :value=\"guess.value\" disabled />\n          <input :value=\"guess.score\" disabled />\n        </div>\n        <div class=\"total\">\n          <input value=\"TOTAL\" disabled />\n          <input name=\"score\" :value=\"score\" disabled />\n        </div>\n      </div>\n      <div style=\"clear:both;\"></div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport * as sha1 from 'js-sha1';\n\nexport default {\n  props: ['size'],\n\n  data() {\n    let guesses = []\n    for (var i = 0; i < this.size; i++) {\n      guesses.push({ value: '', score: '' })\n    }\n    return {\n      slot: 0,\n      guess: '',\n      guesses: guesses,\n      miss: false,\n    }\n  },\n\n  methods: {\n    submit() {\n      let hash = sha1(this.guess).toUpperCase()\n      let prefix = hash.slice(0, 5)\n      let suffix = hash.slice(5, 40)\n\n      fetch('https://api.pwnedpasswords.com/range/' + prefix)\n        .then(response => { return response.text() })\n        .then(data => {\n          let block = {}\n          data.split('\\n').forEach((line) => {\n            let entry = line.split(':')\n            block[entry[0]] = parseInt(entry[1])\n          })\n          return block\n        })\n        .then(block => {\n          // Update scoreboard\n          let guess = { value: this.guess, score: block[suffix] || 0 }\n          this.$set(this.guesses, this.slot, guess)\n\n          // Show X buzzer, if not found\n          if (guess.score < 1) {\n            this.miss = true\n            setTimeout(() => this.miss = false, 1000);\n          }\n\n          // Reset input, move to next scoreboard entry\n          this.guess = ''\n          this.nextSlot()\n        })\n    },\n    reset() {\n      this.slot = 0\n      this.guess = ''\n      this.guesses = []\n      for (var i = 0; i < this.size; i++) {\n        this.guesses.push({ value: '', score: '' })\n      }\n    },\n    nextSlot() {\n      this.slot = (this.slot + 1) % this.size\n    },\n  },\n\n  computed: {\n    rows() {\n      return this.size / 2\n    },\n    score() {\n      let total = 0;\n      for (var i = 0; i < this.guesses.length; i++) {\n        total = total + (parseInt(this.guesses[i].score) || 0)\n      }\n      return total.toLocaleString()\n    },\n    leftColumn() {\n      return this.guesses.slice(0, this.size / 2)\n    },\n    rightColumn() {\n      return this.guesses.slice(this.size / 2, this.size)\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n.controls {\n  margin: 20px 0;\n}\n\n.controls input {\n  font-size: 24px;\n  padding: 2px 8px;\n  margin-right: 10px;\n}\n\n.controls button,\n.controls input[type=\"submit\"] {\n  font-size: 24px;\n  background: none;\n  padding: 2px 8px;\n  margin-right: 10px;\n}\n\n.gameboard {\n  position: relative;\n\n  width: 680px;\n  padding: 20px 20px;\n  border: #111 solid;\n  border-width: 14px 10px;\n  background-color: #0642a3;\n}\n\n.controls .left {\n  width: 60%;\n  margin: 0;\n}\n\n.game .left {\n  float: left;\n}\n\n.game .right {\n  float: right;\n}\n\n.gameboard .column {\n  width: 50%;\n  height: 100%;\n  text-align: center;\n}\n\n.item {\n  margin: 8px 0;\n}\n\n.gameboard input {\n  border: none;\n  font-size: 24px;\n  color: #f2f2f2;\n  padding: 2px 8px;\n  margin: 0x;\n  background-color: #111;\n  border-radius: 2px;\n}\n\n.gameboard .item input:nth-child(1) {\n  width: 50%;\n  margin-right: 2%;\n}\n\n.gameboard .item input:nth-child(2) {\n  width: 30%;\n}\n\n\n.total {\n  text-align: right;\n  margin-right: 4%;\n}\n\n.total input:nth-child(1) {\n  width: 30%;\n  margin: 0;\n}\n\n.total input:nth-child(2) {\n  width: 40%;\n  text-align: right;\n}\n\n.gameboard .x {\n  padding: 0;\n  margin: 0;\n\n  border: 30px solid red;\n  \n  position: absolute;\n  top: 8%;\n  left: 35%;\n  z-index: 1;\n  \n  width: 20%;\n\n  text-align: center;\n  font-family: Verdana;\n  font-size: 12em;\n  font-weight: bold;\n  color: red;\n}\n\n</style>\n"],"sourceRoot":"docs/.vuepress/components/Password"}]}